plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.cleanChioce'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

jar {
	enabled = false
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.jsoup:jsoup:1.18.1'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	// PostgreSQL Vector Type
	//runtimeOnly 'com.mysql:mysql-connector-j'
	implementation 'org.postgresql:postgresql:42.6.0'

	implementation 'io.hypersistence:hypersistence-utils-hibernate-62:3.5.3'
	implementation 'org.apache.httpcomponents.client5:httpclient5:5.2'

	// PGVector
	implementation "org.hibernate.orm:hibernate-core:6.5.2.Final"
	implementation 'org.hibernate.orm:hibernate-vector:6.4.0.Final'
	//implementation 'ai.pgvector:pgvector-java:0.8.0'

	// Spring AI
	//implementation 'org.springframework.ai:spring-ai-pgvector-store-spring-boot-starter'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

	// Discord LogBack
	// implementation 'com.github.napstr:logback-discord-appender:1.0.0'

	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// MapStruct
	implementation 'org.mapstruct:mapstruct:1.4.2.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'

	implementation 'javax.xml.bind:jaxb-api:2.3.1'

	// h2 database(테스트용)
	//runtimeOnly 'com.h2database:h2'

	// annotation config
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	// validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// typeleaf
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// mac m1 아키텍쳐에서 경고 해결
	implementation 'io.netty:netty-resolver-dns-native-macos:4.1.68.Final:osx-aarch_64'

	// AWS S3 SDK
	implementation platform('com.amazonaws:aws-java-sdk-bom:1.11.1000')
	implementation 'com.amazonaws:aws-java-sdk-s3'

	// Webflux
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// swagger-ui
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
	implementation 'org.jetbrains:annotations:24.0.0'


	// junitA
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// spring ai
	//implementation 'org.springframework.ai:spring-ai-openai-spring-boot-starter'

	// Jackson: JSON 직렬화/역직렬화를 위한 라이브러리
	implementation 'com.fasterxml.jackson.core:jackson-databind'

	// OpenFeign: REST API 호출을 위한 Feign Client (선택 사항)
	//implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'


}

tasks.named('test') {
	useJUnitPlatform()
}
